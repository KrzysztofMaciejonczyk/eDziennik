/*
  This file is automatically generated. Any changes will be overwritten.
  Modify add-rodzic.component.ts instead.
*/
import { LOCALE_ID, ChangeDetectorRef, ViewChild, AfterViewInit, Injector, OnInit, OnDestroy } from '@angular/core';
import { Router, ActivatedRoute } from '@angular/router';
import { Location } from '@angular/common';
import { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';
import { Subscription } from 'rxjs';

import { DialogService, DIALOG_PARAMETERS, DialogRef } from '@radzen/angular/dist/dialog';
import { NotificationService } from '@radzen/angular/dist/notification';
import { ContentComponent } from '@radzen/angular/dist/content';
import { TemplateFormComponent } from '@radzen/angular/dist/template-form';
import { LabelComponent } from '@radzen/angular/dist/label';
import { DropDownDataGridComponent } from '@radzen/angular/dist/dropdown-datagrid';
import { ButtonComponent } from '@radzen/angular/dist/button';

import { ConfigService } from '../config.service';

import { BazaService } from '../baza.service';
import { SecurityService } from '../security.service';

export class AddRodzicGenerated implements AfterViewInit, OnInit, OnDestroy {
  // Components
  @ViewChild('content1') content1: ContentComponent;
  @ViewChild('form0') form0: TemplateFormComponent;
  @ViewChild('osobaIdLabel') osobaIdLabel: LabelComponent;
  @ViewChild('osobaId') osobaId: DropDownDataGridComponent;
  @ViewChild('button1') button1: ButtonComponent;
  @ViewChild('button2') button2: ButtonComponent;

  router: Router;

  cd: ChangeDetectorRef;

  route: ActivatedRoute;

  notificationService: NotificationService;

  configService: ConfigService;

  dialogService: DialogService;

  dialogRef: DialogRef;

  httpClient: HttpClient;

  locale: string;

  _location: Location;

  _subscription: Subscription;

  baza: BazaService;

  security: SecurityService;
  getOsobasForosoba_idPageSize: any;
  getOsobasForosoba_idResult: any;
  getOsobasForosoba_idCount: any;
  parameters: any;

  constructor(private injector: Injector) {
  }

  ngOnInit() {
    this.notificationService = this.injector.get(NotificationService);

    this.configService = this.injector.get(ConfigService);

    this.dialogService = this.injector.get(DialogService);

    this.dialogRef = this.injector.get(DialogRef, null);

    this.locale = this.injector.get(LOCALE_ID);

    this.router = this.injector.get(Router);

    this.cd = this.injector.get(ChangeDetectorRef);

    this._location = this.injector.get(Location);

    this.route = this.injector.get(ActivatedRoute);

    this.httpClient = this.injector.get(HttpClient);

    this.baza = this.injector.get(BazaService);
    this.security = this.injector.get(SecurityService);
  }

  ngAfterViewInit() {
    this._subscription = this.route.params.subscribe(parameters => {
      if (this.dialogRef) {
        this.parameters = this.injector.get(DIALOG_PARAMETERS);
      } else {
        this.parameters = parameters;
      }
      this.load();
      this.cd.detectChanges();
    });
  }

  ngOnDestroy() {
    if (this._subscription) {
      this._subscription.unsubscribe();
    }
  }


  load() {
    this.getOsobasForosoba_idPageSize = 10;

    this.baza.getOsobas(null, this.getOsobasForosoba_idPageSize, 0, null, true, null, null, null)
    .subscribe((result: any) => {
      this.getOsobasForosoba_idResult = result.value;

      this.getOsobasForosoba_idCount = result['@odata.count'];
    }, (result: any) => {

    });
  }

  form0Submit(event: any) {
    this.baza.createRodzic(null, event)
    .subscribe((result: any) => {
      if (this.dialogRef) {
        this.dialogRef.close();
      } else {
        this._location.back();
      }
    }, (result: any) => {
      this.notificationService.notify({ severity: "error", summary: `Error`, detail: `Unable to create new Rodzic!` });
    });
  }

  osoba_idLoadData(event: any) {
    this.baza.getOsobas(`${event.filter}`, event.top, event.skip, `${event.orderby}`, true, null, null, null)
    .subscribe((result: any) => {
      this.getOsobasForosoba_idResult = result.value;

      this.getOsobasForosoba_idCount = result['@odata.count'];
    }, (result: any) => {

    });
  }

  button2Click(event: any) {
    if (this.dialogRef) {
      this.dialogRef.close();
    } else {
      this._location.back();
    }
  }
}
